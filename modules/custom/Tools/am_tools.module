<?php

function am_get_game_nid() {
	$query = db_select('node', 'n')
		->fields('n', array('nid'))
		->condition('type', 'game', '=')
		->execute()
		->fetch();

	if (!isset($query->nid)) return NULL;

	return $query->nid;
}

function am_tools_field_val($field) {
	if (!isset($field['und'])) return "";
	return $field['und'][0]['value'];
}

function am_tools_user_name($user) {
	
	if (!is_object($user)) return "na";

	$name = am_tools_field_val($user->field_first_name);
	$name .= " ";
	$name .= am_tools_field_val($user->field_last_name);

	if (strlen($name) <= 1) return "na";

	return $name;
}

function am_tools_valid($input) {
    if ($input == null) return false;
    if (!isset($input)) return false;

    return true;
}

function am_tools_organizer_uids() {
	$uids = array();

	$role_result = db_select('role', 'r')
					->fields('r', array('rid'))
				    ->condition('name', 'Organizer', '=')
				    ->range(0,1)
				    ->execute()
				    ->fetchAssoc();

	$rid = $role_result['rid'];

	$user_query = db_select('users_roles', 'ur');
	$user_query->fields('ur', array('uid'));
	$user_query->condition('rid', $rid, '=');
	$result = $user_query->execute();

	while($record = $result->fetchAssoc()) {
		array_push($uids, $record['uid']);
    }

	return $uids;
}

function am_tools_players_uids() {
	$uids = array();

	$role_result = db_select('role', 'r')
					->fields('r', array('rid'))
				    ->condition('name', 'Player', '=')
				    ->range(0,1)
				    ->execute()
				    ->fetchAssoc();

	$rid = $role_result['rid'];

	$user_query = db_select('users_roles', 'ur')
				->fields('ur', array('uid'))
				->condition('uid', 0, '!=')
				->condition('rid', $rid, '=');
	$result = $user_query->execute();

	while($record = $result->fetchAssoc()) {
		array_push($uids, $record['uid']);
    }

	return $uids;
}

/**
 * Check if players are alive and not suspended
 * and return the uids of the ones that are good
 */
function am_tools_players_status($uids) {

  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'user')
        ->propertyCondition('uid', $uids, 'IN')
        ->propertyCondition('status', 1)
        ->fieldCondition('field_suspended', 'value', array(0))
        ->fieldCondition('field_alive', 'value', array(1));
  $entities = $query->execute();

  if (count($entities) < 1) return array();

  return array_keys($entities['user']);
}