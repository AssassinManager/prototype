<?php

function suspend_default_rules_configuration() {
    $configs = array();

    $am_targets = '{ "rules_assign_targets_after_suspension" : {
	  			     "LABEL" : "Assign Targets after Suspension",
				     "PLUGIN" : "reaction rule",
				     "OWNER" : "rules",
				     "TAGS" : [ "Assassin Manager" ],
				     "REQUIRES" : [ "rules", "target" ],
				     "ON" : { "user_update" : [] },
				     "IF" : [
				       { "user_has_role" : { "account" : [ "account" ], "roles" : { "value" : { "5" : "5" } } } },
				       { "AND" : [] },
				       { "data_is" : { "data" : [ "account:field-suspended" ], "value" : 1 } }
				     ],
				     "DO" : [ { "am_targeting" : [] } ]
				   	 }
				  	}';

  $configs['rules_am_targets_suspension'] = rules_import($am_targets);

  return $configs;
}


/**
 * User suspension handlers
 */
function suspend_form_alter(&$form, &$form_state, $form_id) {
	if ($form_id != "user_profile_form") return;

	/*
	watchdog("form", "<pre>" . print_r($form, 1) . "</pre>");
	watchdog("form_state", "<pre>" . print_r($form_state, 1) . "</pre>");
	watchdog("form_id", "<pre>" . print_r($form_id, 1) . "</pre>");
	*/

	$form['suspend'] = array(
                '#type' => 'button',
                '#name' => 'Suspend',
                '#value' => t('Suspend'),
                '#ajax'  => array('callback' => '_suspend_suspend'),
            );

	return $form;
}
function suspend_user_view_alter(&$build) {
	/*
	 * THIS WAS FOR TESTING, DOESNT WORK
	 *
  	$build['suspend'] = array(
                '#type' => 'button',
                '#name' => 'Suspend',
                '#value' => t('Suspend'),
                '#ajax'  => array('callback' => '_suspend_suspend'),
            );

	return $build;
	*/
}

function _suspend_suspend() {
	//####-- MUST BE CHANGED -- ####//
	/*
	 * This must be changed to use the the correct user, not the current
	 * but the one which's profile is being looked at.
	 */
	global $user;
	$user = user_load($user->uid);
	//####-- MUST BE CHANGED -- ####//

	$kills = _suspend_unconfirmed_kills($user->uid);
	if (count($kills) > 0) {
		drupal_set_message("Target still pending elimination confirmation!", 'warning');
		return;
	}

	unset($user->field_current_target['und']);
	$user->field_suspended['und'][0]['value'] = 1;
	user_save($user);
}

function _suspend_unconfirmed_kills($uid) {
	$query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node')
            ->entityCondition('bundle', 'kill')
            ->propertyCondition('status', 1)
            ->propertyCondition('uid', $uid)
            ->fieldCondition('field_confirmed', 'value', array(0));

    $kills = $query->execute();

    if (count($kills) < 1) return array();
    return array_keys($kills['node']);
}