<?php

require('assassinations_targets.inc');

require('assassinations_kill_action.inc');
require('assassination_player_profile.page.inc');

function assassinations_rules_action_info() {
	return array(
		'am_kill' =>_create_kill_action(),
		);
}

function assassinations_user_view_alter(&$build) {
	//drupal_add_library('system', 'drupal.ajax');
  	//drupal_add_library('system', 'jquery.form');
  	//_assassinations_player_profile($build);
}

function assassinations_form_alter(&$form, &$form_state, $form_id) {

	$form['test_kill'] = array(
                '#type' => 'button',
                '#name' => 'Kill',
                '#value' => t('Kill'),
                '#ajax'  => array(
					'callback' => 'assassinations_kill',
					'wrapper'  => 'the-wrapper-div-field',
					'method'   => 'replace',
					'effect'   => 'fade',
				),
            );

	$form['test_deny'] = array(
                '#type' => 'button',
                '#name' => 'Deny',
                '#value' => t('Deny'),
                '#ajax'  => array(
					'callback' => 'assassinations_deny',
					'wrapper'  => 'the-wrapper-div-field',
					'method'   => 'replace',
					'effect'   => 'fade',
				),
            );

	$form['test_accept'] = array(
                '#type' => 'button',
                '#name' => 'Accept',
                '#value' => t('Accept'),
                '#ajax'  => array(
					'callback' => 'assassinations_accept',
					'wrapper'  => 'the-wrapper-div-field',
					'method'   => 'replace',
					'effect'   => 'fade',
				),
            );

	$form['test_assign'] = array(
                '#type' => 'button',
                '#name' => 'Assign',
                '#value' => t('Assign'),
                '#ajax'  => array(
					'callback' => 'assassinations_assign_targets',
					'wrapper'  => 'the-wrapper-div-field',
					'method'   => 'replace',
					'effect'   => 'fade',
				),
            );

	return $form;
}

/**
 * User targeting handlers
 */
function assassinations_kill() {
	global $user;
	$user = user_load($user->uid);

	if (!isset($user->field_current_target['und']) || 
		count($user->field_current_target['und']) < 1) {
		drupal_set_message("No assigned target!");
		return;
	}

	$kills = _assassinations_unconfirmed_kills($user->uid);
	if (count($kills) > 0) {
		drupal_set_message("Target still pending elimination confirmation!");
		return;
	}

	$target_uid = $user->field_current_target['und'][0]['target_id'];
    _assassinations_kill($user->uid, $target_uid);
}

function assassinations_deny() {
	global $user;

	$user = user_load($user->uid);
	$target_uid = $user->field_current_target['und'][0]['target_id'];

	module_load_include('module', 'messaging', 'messaging');
	messaging_deny_kill($target_uid, $user->uid);

	drupal_set_message("Got that, the organizer was added to the loop to help set this straight.");

    //watchdog("deny", "<pre>" . print_r($user, 1) . "</pre>");
}

function assassinations_accept() {
	global $user;

	$deathWarrants = _assassinations_death_warrant($user->uid);
    watchdog("accept", "<pre>" . print_r($deathWarrants, 1) . "</pre>");
	if (count($deathWarrants) < 1) {
		messaging_problem_kill($target_uid, $user->uid);
		drupal_set_message("Cannot find your death warrant... The organizer was contacted for help.");
		return;
	}

	$kill = node_load($deathWarrants[0]);
	$kill->field_confirmed['und'][0]['value'] = 1;
	node_save($kill);

	// Assigning new target
	$user = user_load($user->uid);
	unset($user->field_current_target['und']);
	assassinations_assign_targets();
}

/**
 * Create kill node
 */
function _assassinations_kill($assassin_uid, $target_uid) {
	$node = new stdclass();
    $node->type = 'kill';
    node_object_prepare($node);

    $node->language = 'und';

    $node->field_confirmed['und'][0]['value'] = 0;

    $node->field_target['und'][0]['target_id'] = $target_uid;
    $node->field_assassin['und'][0]['target_id'] = $assassin_uid;

    node_save($node);
}

/**
 * Utilities
 */
function _assassinations_confirmed_kills($uid) {
	$query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node')
            ->entityCondition('bundle', 'kill')
            ->propertyCondition('status', 1)
            ->propertyCondition('uid', $uid)
            ->fieldCondition('field_confirmed', 'value', array(1));

    $kills = $query->execute();

    if (count($kills) < 1) return array();
    return array_keys($kills['node']);
}
function _assassinations_unconfirmed_kills($uid) {
	$query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node')
            ->entityCondition('bundle', 'kill')
            ->propertyCondition('status', 1)
            ->propertyCondition('uid', $uid)
            ->fieldCondition('field_confirmed', 'value', array(0));

    $kills = $query->execute();

    if (count($kills) < 1) return array();
    return array_keys($kills['node']);
}
function _assassinations_death_warrant($uid) {
	$query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node')
            ->entityCondition('bundle', 'kill')
            ->propertyCondition('status', 1)
            ->fieldCondition('field_target', 'target_id', array($uid));

    $warrant = $query->execute();

    if (count($warrant) < 1) return array();
    return array_keys($warrant['node']);
}

/**
 * Sends new target message to user
 */
function assassinations_user_update(&$edit, $account, $category) {

    $original_target = $edit['original']->field_current_target;
    $new_target = $edit['field_current_target'];

    if ($original_target != $new_target &&
    	isset($new_target['und']) && 
    	count($new_target['und']) > 0) {

    	$target = user_load($new_target['und'][0]['target_id']);

		module_load_include('module', 'messaging', 'messaging');
		module_load_include('inc', 'messaging', 'messaging_notifier');

		$subject = "Assassin Manager job update";
		$body = "You have a new target: " . _get_user_name($target) . "\n\n-AM";
		$to = $account->uid;

		messaging_send_message($subject, $body, $to);
    }
}