<?php

require('target_connectors.inc');
require('target_targeting.inc');
require('target_rules.inc');
require('target_tools.inc');


function target_rules_action_info() {
	return array(
		'am_ranking' =>_update_ranking_action(),
		'am_targeting' =>_update_targets_action(),
		);
}

/**
 * Main target expert
 */
function target_assign_targets() {

	module_load_include('module', 'am_tools', 'am_tools');

	// Get all the players
	$players = am_tools_players_uids();
	if (count($players) < 1) {
		drupal_set_message('No players at all!', 'warning');
		return;
	}

	$valid_players = am_tools_players_status($players);
	if (count($valid_players) < 1) {
		drupal_set_message('No users left! (Are they all gone, eliminated or suspended?)', 'warning');
		return;
	}

	if (count($valid_players) == 1) {
		$user = user_load($valid_players[0]);
		module_load_include('module', 'am_tools', 'am_tools');
		drupal_set_message(t('Only 1 player left, is he the winner? (' . am_tools_user_name($user) . ')'), 'warning');
		return;
	}

	$players = user_load_multiple($players);

	// Find those without targets
	$users_without_target = _users_without_target($players);

	if (count($users_without_target) < 1) {
		drupal_set_message('All targets already assigned', 'status');
		return;
	}

	// Find those untargeted
	$users_targeted = _users_targeted($players);  
	$users_not_targeted = array();
	foreach ($players as $uid => $user) {
		if (in_array($uid, array_keys($users_targeted))) continue;
		$users_not_targeted[$uid] = $user;
	}
	if (count($users_not_targeted) < 1) {
		drupal_set_message('No possible targets, all users are already targetted.', 'warning');
		return;
	}

	// Assign targets
	foreach ($users_without_target as $uid => $user) {

		if (count($users_not_targeted) < 1) {
		  drupal_set_message('No players left to target, but some players remain without target.', 'warning');
		  return;
		}

		$target = array_pop($users_not_targeted);
		$user->field_current_target['und'][0]['target_id'] = $target->uid;
		user_save($user);
	}

	drupal_set_message('All targets assigned', 'status');
}

/**
 * Main ranking expert
 */
function target_update_rankings() {

  module_load_include('module', 'am_tools', 'am_tools');
  $player_uids = am_tools_players_uids();

  $query = db_select('node', 'n')
          ->fields('n', array('uid'))
          ->condition('type', 'kill')
          ->condition('uid', $player_uids, 'IN')
          ->groupBy('n.uid');
  $query->addExpression('COUNT(nid)', 'kill_count');
  $result = $query->execute();

  $usersKills = array();
  while($record = $result->fetchAssoc()) {
      $usersKills[$record['uid']] = $record["kill_count"];
  }
  if(count($usersKills) == 0) return;

  ksort($usersKills, SORT_NUMERIC);

  $counter = 0;
  foreach ($usersKills as $key => $value) {
      $counter++;

      $user = user_load($key);
      $user->field_rank['und'][0]['value'] = $counter;
      user_save($user);
      unset($user);
  }

  foreach ($player_uids as $value) {
      if (array_key_exists($value, $usersKills)) continue;

      $counter++;
      $user = user_load($value);
      $user->field_rank['und'][0]['value'] = $counter;
      user_save($user);
      unset($user);
  }
}

/**
 * implements hook_user_insert().
 */
function target_user_insert(&$edit, $account, $category) {

  module_load_include('module', 'am_tools', 'am_tools');
  $player_uids = am_tools_players_uids();

  $edit->field_rank['und'][0]['value'] = count($player_uids);
  //user_save($account);
}