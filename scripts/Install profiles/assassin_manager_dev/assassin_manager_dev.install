<?php
/**
 * @file
 * Install, update and uninstall functions for the standard installation profile.
 */

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function assassin_manager_dev_install() {
  // Add text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  $full_html_format = array(
    'format' => 'full_html',
    'name' => 'Full HTML',
    'weight' => 1,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);

  // Enable some standard blocks.
  $default_theme = variable_get('theme_default', 'bartik');
  $admin_theme = 'seven';
  $blocks = array(
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
  );
  $query = db_insert('block')->fields(array('module', 'delta', 'theme', 'status', 'weight', 'region', 'pages', 'cache'));
  foreach ($blocks as $block) {
    $query->values($block);
  }
  $query->execute();

  // Insert default pre-defined node types into the database. For a complete
  // list of available node type attributes, refer to the node type API
  // documentation at: http://api.drupal.org/api/HEAD/function/hook_node_info.
  $types = array(
    array(
      'type' => 'page',
      'name' => st('Basic page'),
      'base' => 'node_content',
      'description' => st("Use <em>basic pages</em> for your static content, such as an 'About us' page."),
      'custom' => 1,
      'modified' => 1,
      'locked' => 0,
    ),
  );

  foreach ($types as $type) {
    $type = node_type_set_defaults($type);
    node_type_save($type);
    node_add_body_field($type);
  }

  // Default "Basic page" to not be promoted and have comments disabled.
  variable_set('node_options_page', array('status'));
  variable_set('comment_page', COMMENT_NODE_CLOSED);

  // Don't display date and author information for "Basic page" nodes by default.
  variable_set('node_submitted_page', FALSE);

  // Enable user picture support and set the default to a square thumbnail option.
  variable_set('user_pictures', '0');

  // Allow visitor account creation with administrative approval.
  variable_set('user_register', USER_REGISTER_VISITORS);
  variable_set('user_cancel_method', 'user_cancel_delete');
  variable_set('user_email_verification', 0);
  variable_set('registration_role_roles', 5);

  variable_set('site_default_country', 'US');
  variable_set('configurable_timezones', 0);

  // Enable default permissions for system roles.
  $filtered_html_permission = filter_permission_name($filtered_html_format);
  //user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content', 'access comments', $filtered_html_permission));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content', 'access comments', 'post comments', 'skip comment approval', $filtered_html_permission));

  // Create a default role for site administrators, with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 2;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Create other roles
  $org_role = new stdClass();
  $org_role->name = 'Organizer';
  $org_role->weight = 3;
  user_role_save($org_role);

  $player_role = new stdClass();
  $player_role->name = 'Player';
  $player_role->weight = 4;
  user_role_save($player_role);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();

  // Create a Home link in the main menu.
  $item = array(
    'link_title' => st('Home'),
    'link_path' => '<front>',
    'menu_name' => 'main-menu',
  );
  menu_link_save($item);

  // Update the menu router information.
  menu_rebuild();

  // Enable the admin theme.
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', 'seven')
    ->execute();
  variable_set('admin_theme', 'seven');
  variable_set('node_admin_theme', '1');

  // Set the Mail & Twilio variables
  variable_set('twilio_auth_token', '53f8ccd5ac0279f4572960728ba8eeb4');
  variable_set('twilio_sid', 'AC0dcbcc04c0625c2cbabff0fe47084fb4');
  variable_set('twilio_number', '6304057181');

  mailsystem_set(array(mailsystem_default_id() => 'MandrillMailSystem'));
  variable_set('mandrill_api_key', 'gaJNp0umNNprQZSVpiHAEQ');

  // Set all the messaging variables
  variable_set('all_targets_assigned', 'All assassins have been assigned targets.');
  variable_set('assassin_singled_out', '1 Player left to target himself... the others are busy...');
  variable_set('cannot_find_death_warrant', 'Cannot find your death warrant... something must have went wrong. Please contact our staff for help');
  variable_set('cannot_find_messaging', 'Cannot find messaging module, you cannot challenge a kill without communication!');
  variable_set('challenge_title', 'Elimination challenge');
  variable_set('not_enough_targets', 'No players left for an assassin without target.');
  variable_set('no_valid_players', 'No available players.');
  variable_set('no_valid_users', 'No players at all!');
  variable_set('one_assassin_left', 'Only 1 player left, could he be THE winner?');
  variable_set('kill_deny_confirmation', 'Got that. The assassin was notified, and the organizer was added to the loop to help settle this.');
  variable_set('player_pending_elimination', 'Player is still pending elimination!');
  variable_set('sms_long_notification', '_name_ sent you a message on Assassin Manager. Please log in to view this message.');
  variable_set('sms_notification', '_name_ sent you a msg on Assassin Manager: _msg_');
  variable_set('suspension_msg', 'Your license to kill has been revoked. If you have any questions, please contact your organizer.');
  variable_set('targets_already_assigned', 'All targets already assigned');
  variable_set('target_pending_elimination', 'Illegal action, please first accept or deny having been killed!');
}
